{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport isPlainObject from '@stdlib/assert-is-plain-object' ;\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert-is-nonnegative-integer' ;\nimport iteratorSymbol from '@stdlib/symbol-iterator' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which always returns the same value.\n*\n* @param {*} value - value to return\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterConstant( 3.14 );\n*\n* var v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* v = iter.next().value;\n* // returns 3.14\n*\n* // ...\n*/\nfunction iterConstant( value ) {\n\tvar options;\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\n\topts = {\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length > 1 ) {\n\t\toptions = arguments[ 1 ];\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( '0CE2h', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\t\topts.iter = options.iter;\n\t\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\t\tthrow new TypeError( format( '0CE35', 'iter', options.iter ) );\n\t\t\t}\n\t\t}\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value, // Note: can be different than the iterator constant\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterConstant( value, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterConstant;\n"],"names":["iterConstant","value","options","opts","iter","FLG","i","arguments","length","isPlainObject","TypeError","format","hasOwnProp","isNonNegativeInteger","setReadOnly","next","end","iteratorSymbol","factory","done"],"mappings":";;0kBAwDA,SAASA,EAAcC,GACtB,IAAIC,EACAC,EACAC,EACAC,EACAC,EAKJ,GAHAH,EAAO,CACNC,KAAQ,OAEJG,UAAUC,OAAS,EAAI,CAE3B,IAAMC,EADNP,EAAUK,UAAW,IAEpB,MAAM,IAAIG,UAAWC,EAAQ,QAAST,IAEvC,GAAKU,EAAYV,EAAS,UACzBC,EAAKC,KAAOF,EAAQE,MACdS,EAAsBX,EAAQE,OACnC,MAAM,IAAIM,UAAWC,EAAQ,QAAS,OAAQT,EAAQE,MAGxD,CAYD,OAXAE,EAAI,EAIJQ,EADAV,EAAO,CAAA,EACY,OAAQW,GAC3BD,EAAaV,EAAM,SAAUY,GAGxBC,GACJH,EAAaV,EAAMa,EAAgBC,GAE7Bd,EAQP,SAASW,IAER,OADAT,GAAK,EACAD,GAAOC,EAAIH,EAAKC,KACb,CACNe,MAAQ,GAGH,CACNlB,MAASA,EACTkB,MAAQ,EAET,CASD,SAASH,EAAKf,GAEb,OADAI,GAAM,EACDE,UAAUC,OACP,CACNP,MAASA,EACTkB,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASD,IACR,OAAOlB,EAAcC,EAAOE,EAC5B,CACF"}